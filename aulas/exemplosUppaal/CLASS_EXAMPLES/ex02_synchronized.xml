<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int iterations = 10;
const int maxThreads = 4;

chan CanI[maxThreads], IWant[maxThreads],ILeft[maxThreads];</declaration><template><name x="5" y="5">SimpleThread</name><parameter>const int[0,maxThreads] threadNum</parameter><declaration>// Place local declarations here.
int[0,iterations] i = 0;</declaration><location id="id0" x="-1752" y="-744"><name x="-1736" y="-752">waiting</name></location><location id="id1" x="-1824" y="-632"><name x="-1816" y="-656">doSomething2</name></location><location id="id2" x="-1824" y="-704"><name x="-1808" y="-704">criticalregion</name></location><location id="id3" x="-1824" y="-776"><name x="-1816" y="-800">doSomething1</name></location><location id="id4" x="-1952" y="-840"><name x="-1992" y="-864">done</name></location><location id="id5" x="-1824" y="-840"><name x="-1816" y="-864">checkLoop</name></location><location id="id6" x="-1824" y="-912"><name x="-1808" y="-936">start</name></location><init ref="id6"/><transition><source ref="id4"/><target ref="id4"/><nail x="-1928" y="-800"/><nail x="-1976" y="-800"/></transition><transition><source ref="id0"/><target ref="id2"/><label kind="synchronisation" x="-1784" y="-728">CanI[threadNum]?</label></transition><transition><source ref="id3"/><target ref="id0"/><label kind="synchronisation" x="-1792" y="-776">IWant[threadNum]!</label></transition><transition><source ref="id1"/><target ref="id5"/><label kind="assignment" x="-1896" y="-736">i++</label><nail x="-1904" y="-728"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-1816" y="-680">ILeft[threadNum]!</label></transition><transition><source ref="id5"/><target ref="id3"/><label kind="guard" x="-1816" y="-824">i&lt;iterations</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="-1936" y="-864">i &gt;= iterations</label></transition><transition><source ref="id6"/><target ref="id5"/></transition></template><template><name>Controller</name><declaration>meta int[0,maxThreads] owner;</declaration><location id="id7" x="-504" y="-336"><name x="-496" y="-360">freeCR</name></location><location id="id8" x="-504" y="-208"><name x="-488" y="-216">busyCR</name></location><location id="id9" x="-504" y="-272"></location><init ref="id7"/><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-496" y="-192">ILeft[owner]?</label><nail x="-504" y="-176"/><nail x="-544" y="-176"/><nail x="-544" y="-336"/></transition><transition><source ref="id7"/><target ref="id9"/><label kind="select" x="-496" y="-328">id:int[0,maxThreads-1]</label><label kind="synchronisation" x="-496" y="-312">IWant[id]?</label><label kind="assignment" x="-496" y="-296">owner:= id</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-496" y="-256">CanI[owner]!</label></transition></template><system>// Place template instantiations here.
Process0 = SimpleThread(0);
Process1 = SimpleThread(1);
Process2 = SimpleThread(2);
Process3 = SimpleThread(3);

Controller0 = Controller();

// List one or more processes to be composed into a system.
system Controller0, Process0, Process1,
                    Process2, Process3;</system></nta>